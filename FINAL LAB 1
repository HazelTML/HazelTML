/*Salvador, Hazel Angela M.
Final Challenge No.1: Retail Store Inventory Management (1D Array)
November 20, 2024*/

// VERSION 1: HAS PRE-DEFINED VALUE

public class PdRetail {
    
    public static void main(String[]args){
        
        // Array to hold the prices of 10 items
        double price[] = {250.00, 225.00, 200.00, 175.00, 150.00, 125.00, 100.00, 75.00, 50.00, 25.00};
        
        // Array to hold the quantities of 10 items
        int quantity[] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
        
        // Variable to accumulate the total amount, average, highest, and lowest
        double tAmount = 0;
        double hAmount = 0;
        double lAmount = Double.MAX_VALUE;
        
        // Loop to calculate subtotal for each item and accumulate totalAmount
        for (int i = 0; i < 10; i++){
            
            // Calculate the subtotal for each item (price * quantity)
            double iSum = price[i] * quantity[i];
            
            // Add the item subtotal to the total amount
            tAmount = tAmount + iSum;
            
            // Print out details of the current item: price, quantity, and subtotal
            System.out.println("Item " + (i + 1) + ": Price = Php " + price[i] + ", Quantity = " + quantity[i] + ", Subtotal = Php " + iSum);
        }
        
            // To calculate the total value and to find highest and lowest values
        for (int i = 0; i < 10; i++) {
            double pAmount = quantity[i] * price[i];
            tAmount += pAmount;

            if (pAmount > hAmount) {
                hAmount = pAmount;
            }

            if (pAmount < lAmount) {
                lAmount = pAmount;
            }
        }

        // Calculate the average value
        double aAmount = tAmount / 10;

        // Output results
        System.out.println("\nStock Summary:");
        System.out.println("Total value of items in stock: Php " + tAmount);
        System.out.println("Average value of items in stock: Php " + tAmount);
        System.out.println("Highest value of a product in stock: Php " + hAmount);
        System.out.println("Lowest value of a product in stock: Php " + lAmount);

    }
}

//SUBMITTED OUTPUT
/*Salvador, Hazel Angela M.
Final Challenge No.1: Retail Store Inventory Management (1D Array)
December 4, 2024*/

package salvador;
        
// VERSION 1: HAS PRE-DEFINED VALUE
public class PdRetail {
    
    public static void main(String[]args){
        
        // This array will hold the prices of 10 pre-defined value of items
        double price[] = {250.00, 225.00, 200.00, 175.00, 150.00, 125.00, 100.00, 75.00, 50.00, 25.00};
        
        // This array will hold the stock levels of 10 pre-defined value of items
        int quantity[] = {10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
        
        // Variable to accumulate the total starting amount
        double tAmount = 0;
        
        // Loop to calculate subtotal for each item and solve the totalAmount
        for (int i = 0; i < 10; i++){
            
            // Calculate the product for each item (price * quantity)
            double iSum = price[i] * quantity[i];
            
            // Add the item subtotal to the total amount
            tAmount = tAmount + iSum;
            
            // Print out details of the current item: price, quantity, and subtotal
            System.out.println("Item " + (i + 1) + ": Price = Php " + price[i] + ", Quantity = " + quantity[i] + ", Subtotal = Php " + iSum);
        }

        // Output results
        System.out.println("\nStock Summary:");
        System.out.printf("Total value of items in stock: Php %,.2f\n", tAmount);
    
    }
}

// VERSION 2: ASKS FOR USER INPUT

import java.util.Scanner;

public class InventoryManagement {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Declare the stock of 10 products
        final int prod = 10;

        // Arrays to store stock levels and prices
        int[] stockLevels = new int[prod];
        double[] prices = new double[prod];

        // Prompt the user to input for stock levels and prices
        System.out.println("Enter the stock levels for " + prod + " products:");
        for (int stock = 0; stock < prod; stock++) {
            System.out.print("Stock level for product " + (stock + 1) + ": ");
            stockLevels[stock] = scanner.nextInt();
        }

        System.out.println("\nEnter the prices for " + prod + " products:");
        for (int price = 0; price < prod; price++) {
            System.out.print("Price for product " + (price + 1) + ": ");
            prices[price] = scanner.nextDouble();
        }

        // Declare variables to calculate the total, average, highest, and lowest values
        double tValue = 0;
        double hValue = 0;
        double lValue = Double.MAX_VALUE;

        // To calculate the total value and to find highest and lowest values
        for (int total = 0; total < prod; total++) {
            double pValue = stockLevels[total] * prices[total];
            tValue += pValue;

            if (pValue > hValue) {
                hValue = pValue;
            }

            if (pValue < lValue) {
                lValue = pValue;
            }
        }

        // Calculate the average value
        double aValue = tValue / prod;

        // Output results
        System.out.println("\nStock Summary:");
        System.out.println("Total value of items in stock: Php " + tValue);
        System.out.println("Average value of items in stock: Php " + aValue);
        System.out.println("Highest value of a product in stock: Php " + hValue);
        System.out.println("Lowest value of a product in stock: Php " + lValue);

        scanner.close();
    }
}
